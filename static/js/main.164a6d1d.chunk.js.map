{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/FooterBar.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","_useState","useState","_useState2","Object","slicedToArray","btnStrong","setBtnStrong","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","role","aria-checked","toggleMode","htmlFor","placeholder","TextForm","text","setText","Fragment","heading","value","onChange","event","target","rows","style","backgroundColor","color","newText1","toUpperCase","showAlert","newText2","toLowerCase","newText3","split","reverse","join","newText5","document","getElementById","select","navigator","clipboard","writeText","length","FooterBar","protoTypes","PropTypes","string","isRequired","aboutText","defaultProps","Alert","alert","typ","word","lower","charAt","slice","capitalize","msg","App","setMode","message","setAlert","setTimeout","_useState3","_useState4","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.164a6d1d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\nexport default function Navbar(props) {\r\n  const turnDarkModeOn = () => {\r\n    if (btnStrong === \"Enable Dark Mode\") {\r\n      setBtnStrong(\"Enable Light Mode\");\r\n    } else {\r\n      setBtnStrong(\"Enable Dark Mode\");\r\n    }\r\n  };\r\n  const [btnStrong, setBtnStrong] = useState(\"Enable Dark Mode\");\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                About\r\n              </a>\r\n            </li>\r\n          </ul>\r\n\r\n          <div className=\"form-check form-switch mx-3\" onClick={turnDarkModeOn}>\r\n            <input\r\n              className={`form-check-input bg-${props.mode}`}\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              aria-checked=\"true\"\r\n              onClick={props.toggleMode}\r\n            />\r\n\r\n            <label\r\n              className={`form-check-label text-${\r\n                props.mode === \"light\" ? \"dark\" : \"light\"\r\n              }`}\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              {btnStrong}\r\n            </label>\r\n          </div>\r\n\r\n          <form className=\"d-flex\" role=\"search\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavbar.protoTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string,\r\n};\r\nNavbar.defaultProps = {\r\n  title: \"Set Name\",\r\n  aboutText: \"About Name\",\r\n};\r\n","import React, { useState } from \"react\";\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    // console.log(\"Uppercase was clicked \"+text);\r\n    let newText1 = text.toUpperCase();\r\n    setText(newText1);\r\n    props.showAlert('Converted to UpperCase','success');\r\n  };\r\n  const handleDownClick = () => {\r\n    // console.log(\"Uppercase was clicked \"+text);\r\n    let newText2 = text.toLowerCase();\r\n    setText(newText2);\r\n    props.showAlert('Converted to LowerCase','success');\r\n  };\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"On Change\");\r\n    setText(event.target.value);\r\n  };\r\n  const handleOnReverse = () => {\r\n    let newText3 = text.split(\"\").reverse().join(\"\");\r\n    //with loops\r\n    // let newText3 = \"\";\r\n    // for (var i = text.length - 1; i >= 0; i--) {\r\n    //     newText3 += text[i];\r\n    // }\r\n    setText(newText3);\r\n    props.showAlert('String Reversed','success');\r\n  };\r\n  const handleOnRemoveSpaces = () => {\r\n    let newText5 = text.split(/[ ]+/);\r\n    setText(newText5.join(\" \"));\r\n    props.showAlert('Extra space removed','success');\r\n  };\r\n  const handleOnClear = () => {\r\n    let newText4 = \"\";\r\n    setText(newText4);\r\n    props.showAlert('Cleared!!','success');\r\n  };\r\n  const handleOnCopy = () => {\r\n    let text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert('Copied!!','success');\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        {/* style={myStyle} */}\r\n        <h1>{props.heading}</h1>\r\n        <textarea\r\n          className=\"form-control\"\r\n          value={text}\r\n          onChange={handleOnChange}\r\n          id=\"myBox\"\r\n          rows=\"8\"\r\n          style={{backgroundColor : props.mode==='dark'?'#000000':'white', color : props.mode==='dark'?'white':'#000000'}}\r\n        ></textarea>\r\n        <button className=\"btn btn-primary my-3\" onClick={handleUpClick}>\r\n          Convert to UpperCase\r\n        </button>\r\n        <button className=\"btn btn-primary my-3 mx-2\" onClick={handleDownClick}>\r\n          Convert to LowerCase\r\n        </button>\r\n        <button className=\"btn btn-primary my-3 mx-2\" onClick={handleOnReverse}>\r\n          Reverse\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary my-3 mx-2\"\r\n          onClick={handleOnRemoveSpaces}\r\n        >\r\n          Remove Extra Spaces\r\n        </button>\r\n        <button className=\"btn btn-primary my-3 mx-2\" onClick={handleOnClear}>\r\n          Clear Text\r\n        </button>\r\n        <button className=\"btn btn-primary my-3 mx-2\" onClick={handleOnCopy}>\r\n          Copy Text\r\n        </button>\r\n        {/* <button className=\"btn btn-primary my-3 mx-2\" >\r\n          Paste Text\r\n        </button> */}\r\n        {/* <button className=\"btn btn-primary my-3 mx-2\" onClick={enableDarkMode}>{btnText}</button> */}\r\n      </div>\r\n      <div className=\"conatiner my-3\">\r\n        {/* style={myStyle} */}\r\n        <h2>Preview</h2><hr />\r\n        <p>{text.length>0?text:\"Enter something in the above box\"}</p><hr />\r\n        <h2> Your Text Summary</h2>\r\n        <p>\r\n          {text.split(\" \").length - 1} words and {text.length} characters\r\n        </p>\r\n        <p>{(text.split(\" \").length - 1) * 0.008} Minutes to read</p><br />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function FooterBar(props) {\r\n  return (\r\n      <div className={` text-center p-3 bg-${props.mode==='dark'?'dark':'light'}\r\n      `}>\r\n        ©2022 Copyright:  \r\n        <a\r\n          className=\"text\"\r\n          href=\"https://www.linkedin.com/in/adarsh-sharma-438b9b1b9/\"\r\n        >\r\n          Linkedin Profile\r\n        </a>\r\n      </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert &&\r\n      <div\r\n        className={`alert alert-${props.alert.typ} alert-dismissible fade show `}\r\n        // bg-${props.mode==='light'?'light':'dark'}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{capitalize(props.alert.typ)}</strong> : {props.alert.msg}\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\n// import About from \"./components/About\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport FooterBar from \"./components/FooterBar\";\nimport Alert from \"./components/Alert\";\n// import { BrowserRouter as Router, Route, Routes} from \"react-router-dom\";\n\nfunction App() {\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"black\";\n      document.body.style.color = \"white\";\n      showAlert(\"Dark Mode has been Enabled\", \"success\");\n      document.title = \"TextUtils - DarkMode\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n      showAlert(\"Light Mode has been Enabled\", \"success\");\n      document.title = \"TextUtils - LightMode\";\n    }\n  };\n  const [mode, setMode] = useState(\"light\");\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      typ: type,\n    });\n    setTimeout(() => {\n      setAlert(\"\", \"\");\n    }, 1000);\n  };\n  const [alert, setAlert] = useState(\"\", \"\");\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar\n          title=\"TextUtils\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} mode={mode} />\n        <div className=\"container my-3\">\n          {/* <Routes>\n            <Route path=\"/about\" element = {}>\n              <About />\n            </Route>\n            <Route path=\"/\" element={}> */}\n              <TextForm\n                heading=\"Enter the text to analyse\"\n                mode={mode}\n                showAlert={showAlert}\n              />\n            {/* </Route>\n          </Routes> */}\n        </div>\n          <FooterBar mode={mode} />\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}